# Xcode
# Build, test, and archive an Xcode workspace on macOS.
# Add steps that install certificates, test, sign, and distribute the app, save build artifacts, and more:
# https://docs.microsoft.com/vsts/pipelines/languages/xcode

pool:
  vmImage: 'macOS-latest' 

variables:
  scheme: 'myCurrencyExchange'
  sdk: 'iphoneos'
  configuration: 'Debug'

steps:

- script: /usr/local/bin/carthage bootstrap --platform ios  --no-use-binaries --use-xcframeworks
  displayName: 'Carthage installation'

- script: /usr/local/bin/carthage copy-frameworks 
  displayName: 'Carthage copy'

  ## Firstly builds the tests without running them
- task: Xcode@5
  inputs:
    actions: 'build-for-testing'
    sdk: 'iphonesimulator'
    packageApp: false
    destinationPlatformOption: 'iOS'
    destinationSimulators: 'iPhone 14'

## Runs the previously built tests
- task: Xcode@5
  inputs:
    actions: 'test-without-building'
    sdk: 'iphonesimulator'
    packageApp: false
    destinationPlatformOption: 'iOS'
    destinationSimulators: 'iPhone 14'

- task: Xcode@5
  displayName: 'Running XCTest/XCUITest'
  inputs:
    actions: 'test'
    scheme: '$(scheme)'
    sdk: 'iphonesimulator'
    configuration: '$(configuration)'
    xcodeVersion: 'default' # Options: 8, 9, default, specifyPath
    packageApp: false
    xcWorkspacePath: 'myCurrencyExchange.xcodeproj'
    destinationSimulators: 'iPhone 14'
    destinationTypeOption: 'simulators'
    destinationPlatformOption: 'iOS'
    signingOption: "auto"
    useXcpretty: true
    publishJUnitResults: true

- task: Xcode@5
  displayName: 'Xcode debug build'
  inputs:
    actions: 'build'
    scheme: '$(scheme)'
    sdk: '$(sdk)'
    configuration: '$(configuration)'
    xcodeVersion: 'default'
    packageApp: false
    xcWorkspacePath: 'myCurrencyExchange.xcodeproj'
    useXcpretty: true

